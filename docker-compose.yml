version: '3.8'

services:
  # Load Balancer - nginx
  nginx:
    image: nginx:1.25-alpine
    ports:
      - "9999:9999"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
    depends_on:
      - app1
      - app2
    deploy:
      resources:
        limits:
          cpus: "0.1"
          memory: "32MB"
    networks:
      - payment-processor
      - internal

  # Application Instance 1
  app1:
    build: .
    environment:
      - NODE_ENV=production
      - PORT=3000
      - DATABASE_URL=postgresql://postgres:postgres@postgres:5432/rinha
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - DEFAULT_PROCESSOR_URL=http://payment-processor-default:8080
      - FALLBACK_PROCESSOR_URL=http://payment-processor-fallback:8080
      - LOG_LEVEL=info
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    deploy:
      resources:
        limits:
          cpus: "0.5"
          memory: "128MB"
    networks:
      - payment-processor
      - internal
    command: sh -c "npx prisma migrate deploy && node dist/main.js"

  # Application Instance 2  
  app2:
    build: .
    environment:
      - NODE_ENV=production
      - PORT=3000
      - DATABASE_URL=postgresql://postgres:postgres@postgres:5432/rinha
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - DEFAULT_PROCESSOR_URL=http://payment-processor-default:8080
      - FALLBACK_PROCESSOR_URL=http://payment-processor-fallback:8080
      - LOG_LEVEL=info
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    deploy:
      resources:
        limits:
          cpus: "0.5"
          memory: "128MB"
    networks:
      - payment-processor
      - internal
    command: sh -c "node dist/main.js"

  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    environment:
      - POSTGRES_DB=rinha
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_INITDB_ARGS=--encoding=UTF-8 --lc-collate=C --lc-ctype=C
    volumes:
      - postgres_data:/var/lib/postgresql/data
    deploy:
      resources:
        limits:
          cpus: "0.3"
          memory: "48MB"
    networks:
      - internal
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d rinha"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s
    command: >
      postgres 
      -c max_connections=50
      -c shared_buffers=16MB
      -c effective_cache_size=32MB
      -c maintenance_work_mem=8MB
      -c checkpoint_completion_target=0.9
      -c wal_buffers=1MB
      -c default_statistics_target=100
      -c random_page_cost=1.1
      -c effective_io_concurrency=200
      -c work_mem=2MB
      -c min_wal_size=32MB
      -c max_wal_size=64MB

  # Redis Cache
  redis:
    image: redis:7-alpine
    deploy:
      resources:
        limits:
          cpus: "0.1"
          memory: "16MB"
    networks:
      - internal
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 3s
      retries: 5
      start_period: 5s
    command: >
      redis-server
      --maxmemory 12mb
      --maxmemory-policy allkeys-lru
      --save ""
      --appendonly no

volumes:
  postgres_data:

networks:
  # External network for payment processors (must be created first)
  payment-processor:
    external: true
  # Internal network for services communication
  internal:
    driver: bridge